name: build_test

# Workflow trigger
on:
  push:
    branches:
      - main
  pull_request:
    # Configuring this means that your PRs will get a GitHub comment
    # from Coveralls with your coverage.
    branches:
      - main

# A list of jobs to run as part of the workflow
jobs:

  # Each job gets a name. This one builds/tests all branches.
  build_test:

    # Provide a runner. Options are listed on GitHub, but include
    # windows, ubuntu, and macos (latest, as well as specific versions)
    # ???? do we need windows and macos too?? !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -el {0}

    strategy:
      matrix:
        python-version: ["3.9","3.10", "3.11"]

    steps:
      - name: Check Build Number # testing !!
        run: |
          echo "Build Number: $GITHUB_RUN_NUMBER"

      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: opentowork
          environment-file: environment.yml
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false

      - name: Install additional development dependencies
        run: |
          conda install --yes coverage

      - name: Prepare chrome
        # https://github.com/marketplace/actions/setup-chromedriver
        uses: nanasess/setup-chromedriver@v2
        # with:
        #     # Optional: do not specify to match Chrome's version
        #     chromedriver-version: '122.0.6261.94'
      - name: Set up virtual display
        run: |
          sudo apt-get install -y xvfb
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional

      - name: Lint with pylint
        run: |
          pylint opentowork/*.py
        #  pylint opentowork/scraper/*.py

      - name: Unit tests
        run: |
          cd opentowork
          coverage run -m unittest discover
          coverage report
          coverage lcov

      - name: Report code coverage to Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          base-path: opentowork
          path-to-lcov: opentowork/coverage.lcov
          flag-name: run ${{ join(matrix.*, ' - ') }}
          parallel: true

  # Send final code coverage to Coveralls
  finish:
    # This job requires that build_test be finished before it
    # can run.
    needs: build_test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
        carryforward: "run-3.7,run-3.8,run-3.9,run-3.10"
